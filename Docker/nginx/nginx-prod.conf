events {
  worker_connections  2048;
}

http {

    server {
        listen 80;

        access_log /var/log/nginx/http-access.log combined buffer=32k gzip;
        error_log /var/log/nginx/http-error.log notice;

        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost;
        index index.php index.html;
        root /var/www/html/public;

        access_log /var/log/nginx/https-access.log combined buffer=32k gzip;
        error_log /var/log/nginx/https-error.log notice;

        ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        location / {
            try_files $uri /index.php?$args;
        }

        location ~ \.css {
            default_type text/css;
        }

        location ~ \.js {
            default_type application/javascript;
        }

        location ~ ^/(assets/|css/|js/|index.html) {
            root /var/www/html/public;
            index index.html;
            access_log off;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    server {
        listen 5173;

        access_log /var/log/nginx/http-access.log combined buffer=32k gzip;
        error_log /var/log/nginx/http-error.log notice;

        location / {
            resolver 127.0.0.1;
            set $nodeserver npm-prod:5173;
            proxy_pass http://$nodeserver;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 3000;

        access_log /var/log/nginx/http-access.log combined buffer=32k gzip;
        error_log /var/log/nginx/http-error.log notice;

        location / {
            resolver 127.0.0.1;
            set $nodeserver npm-prod:3000;
            proxy_pass http://$nodeserver;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}