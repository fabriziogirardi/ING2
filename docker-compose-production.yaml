networks:
  portfolio_default:
    name: portfolio_default
    driver: bridge
    external: true
  ing2-default:
    name: ing2_default
    driver: bridge

services:
  nginx:
    build:
      context: ./Docker
      dockerfile: nginx.dockerfile
      target: production
    restart: unless-stopped
    container_name: ${APP_NAME}-nginx
    environment:
      TZ: America/Argentina/Buenos_Aires
    volumes:
      - data-production:/var/www/static
    depends_on:
      php:
        condition: service_started
      laravel-queue:
        condition: service_started
      laravel-cron:
        condition: service_started
    networks:
      portfolio_default:
        aliases:
          - nginx-ing2

  php:
    build:
      context: ./
      dockerfile: Docker/php-production.dockerfile
      target: production
    container_name: ${APP_NAME}-php
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    depends_on:
      mariadb:
        condition: service_started
      redis:
        condition: service_started
      php-init:
        condition: service_completed_successfully
    networks:
      ing2-default:
      portfolio_default:
        aliases:
          - php-ing2

  php-init:
    build:
      context: ./
      dockerfile: Docker/php-production.dockerfile
      target: init
    container_name: ${APP_NAME}-php-init
    env_file:
      - .env
    volumes:
      - data-production:/var/www/html
    depends_on:
      mariadb:
        condition: service_started
      composer-init:
        condition: service_completed_successfully
      npm-init:
        condition: service_completed_successfully
    working_dir: /var/www/html
    networks:
      - ing2-default

  composer-init:
    build:
      context: ./
      dockerfile: Docker/composer-production.dockerfile
      target: init
    container_name: ${APP_NAME}-composer-init
    env_file:
      - .env
    volumes:
      - data-production:/var/www/html
    working_dir: /var/www/html
    networks:
      - ing2-default

  npm-init:
    build:
      context: ./
      dockerfile: Docker/node.dockerfile
      target: init
    container_name: ${APP_NAME}-npm-init
    env_file:
      - .env
    volumes:
      - data-production:/var/www/html
    working_dir: /var/www/html
    networks:
      - ing2-default

  mariadb:
    image: mariadb:11.6.2-ubi9
    container_name: ${APP_NAME}-mariadb
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      TZ: America/Buenos_Aires
    networks:
      - ing2-default

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}-redis
    environment:
      - TZ=America/Buenos_Aires
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - ing2-default

  laravel-cron:
    build:
      context: ./Docker
      dockerfile: php-production.dockerfile
      target: clean
    container_name: ${APP_NAME}-laravel-cron
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    depends_on:
      php:
        condition: service_started
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan', 'schedule:work']
    networks:
      - ing2-default

  laravel-queue:
    build:
      context: ./Docker
      dockerfile: php-production.dockerfile
      target: clean
    container_name: ${APP_NAME}-laravel-queue
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    depends_on:
      php:
        condition: service_started
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan', 'queue:work']
    networks:
      - ing2-default

  vite:
    build:
      context: ./Docker
      dockerfile: node.dockerfile
      target: production
    container_name: ${APP_NAME}-vite-local
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    working_dir: /var/www/html
    networks:
      - ing2-default

  composer:
    build:
      context: ./Docker
      dockerfile: composer-production.dockerfile
      target: base
    container_name: ${APP_NAME}-composer
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    working_dir: /var/www/html
    profiles: ["composer"]
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - ing2-default

  artisan:
    build:
      context: ./Docker
      dockerfile: php-production.dockerfile
      target: clean
    container_name: ${APP_NAME}-artisan
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    depends_on:
      - mariadb
    working_dir: /var/www/html
    profiles: ["artisan"]
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - ing2-default

  npm:
    build:
      context: ./Docker
      dockerfile: node.dockerfile
      target: base
    container_name: ${APP_NAME}-npm
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    working_dir: /var/www/html
    profiles: ["npm"]
    entrypoint: ['npm']
    networks:
      - ing2-default

  npx:
    build:
      context: ./Docker
      dockerfile: node.dockerfile
      target: base
    container_name: ${APP_NAME}-npx
    environment:
      - TZ=America/Buenos_Aires
    volumes:
      - data-production:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    profiles: ["npx"]
    entrypoint: ['npx']
    networks:
      - ing2-default

volumes:
  data-production:
    name: data-production
    external: true
